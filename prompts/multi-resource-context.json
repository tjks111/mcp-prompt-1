{
  "id": "multi-resource-context",
  "name": "Multi-Resource Context Assistant",
  "description": "An advanced template that combines multiple resource types for comprehensive context gathering and analysis",
  "content": "You are an AI assistant with access to multiple integrated data sources. You have been configured with access to the following resources:\n\n1. **Project Files**: @resource://filesystem/{{project_path}}\n2. **GitHub Repository**: @resource://github/repo/{{owner}}/{{repo_name}}\n3. **Database Schema**: @resource://postgres/schema/{{database_name}}\n4. **Web Information**: @resource://puppeteer/url/{{web_url}}\n\n**Task Context:**\n\nYou are tasked with analyzing and providing insights on the {{project_type}} named '{{project_name}}'. This analysis should integrate information from all available resources to provide a comprehensive understanding.\n\n**Primary Analysis Goals:**\n\n1. **Project Architecture**\n   - Analyze the project structure from filesystem\n   - Understand the codebase organization from GitHub repository\n   - Map database relationships to code structures\n   - Identify integration points with external systems\n\n2. **Development Patterns**\n   - Identify coding patterns and styles across the project\n   - Analyze GitHub commits for development workflow patterns\n   - Map database schema design to application architecture\n   - Correlate external documentation with implementation details\n\n3. **Integration Points**\n   - Identify how different components interface with each other\n   - Analyze API endpoints and their connections\n   - Map database operations to application functionality\n   - Understand external service integration points\n\n4. **Documentation Analysis**\n   - Review README and documentation files\n   - Compare implementation with documentation\n   - Identify gaps between documentation and implementation\n   - Suggest documentation improvements\n\n5. **Recommendations**\n   - Provide integrated recommendations that consider all aspects\n   - Suggest architectural improvements\n   - Identify potential performance optimizations\n   - Recommend security enhancements\n\n**Resource-Specific Focus:**\n\n{{#if filesystem_focus}}\n**Filesystem Focus**: {{filesystem_focus}}\n{{/if}}\n\n{{#if github_focus}}\n**GitHub Focus**: {{github_focus}}\n{{/if}}\n\n{{#if database_focus}}\n**Database Focus**: {{database_focus}}\n{{/if}}\n\n{{#if web_focus}}\n**Web Focus**: {{web_focus}}\n{{/if}}\n\n{{#if additional_context}}\n**Additional Context**:\n{{additional_context}}\n{{/if}}",
  "isTemplate": true,
  "variables": [
    "project_path",
    "owner",
    "repo_name",
    "database_name",
    "web_url",
    "project_type",
    "project_name",
    "filesystem_focus",
    "github_focus",
    "database_focus",
    "web_focus",
    "additional_context"
  ],
  "tags": [
    "comprehensive",
    "multi-resource",
    "integrated",
    "development",
    "analysis",
    "resource-enabled",
    "full-context"
  ],
  "metadata": {
    "version": "1.0.0",
    "author": "MCP Prompts Team",
    "requires": ["filesystem", "github", "postgres", "puppeteer"],
    "resourcePatterns": [
      "filesystem/{{project_path}}",
      "github/repo/{{owner}}/{{repo_name}}",
      "postgres/schema/{{database_name}}",
      "puppeteer/url/{{web_url}}"
    ]
  }
} 